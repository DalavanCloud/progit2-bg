==== Mercurial

(((Mercurial)))(((Importing, from Mercurial)))
Mercurial и Git имат подобни модели за представяне на версиите и понеже Git е малко по-гъвкав, конвертирането на хранилище от Mercurial към Git е сравнително лесно чрез инструмента "hg-fast-export", който можете да свалите от:

[source,console]
----
$ git clone https://github.com/frej/fast-export.git
----

Първата стъпка е да се сдобием с пълно копие на хранилището на Mercurial, което ще конвертираме:

[source,console]
----
$ hg clone <remote repo URL> /tmp/hg-repo
----

Следващата е да създадем author mapping файл.
Mercurial е по-малко рестриктивен от Git по отношение на това какво може да се слага в authot полето на changeset-ите, така че това е удобен момент за почистване.
Създаването на списъка отнема една команда в `bash` шела:

[source,console]
----
$ cd /tmp/hg-repo
$ hg log | grep user: | sort | uniq | sed 's/user: *//' > ../authors
----

Това ще отнеме няколко секунди в зависимост от дължината на историята на проекта, след което файлът `/tmp/authors` ще изглежда по подобен начин:

[source]
----
bob
bob@localhost
bob <bob@company.com>
bob jones <bob <AT> company <DOT> com>
Bob Jones <bob@company.com>
Joe Smith <joe@company.com>
----

В този конкретен пример, един и същи човек (Bob) е създал changeset-и под четири различни имена, едно от които изглежда коректно и друго, което ще е изцяло невалидно за един Git къмит.
Hg-fast-export ни позволява да коригираме това превръщайки всеки ред в правило: `"<input>"="<output>"`, мапвайки `<input>` към `<output>`.
В стринговете `<input>` и `<output>`, са позволени всички escape последователности, които се поддържат от `string_escape` енкодинга на python.
Ако author mapping файлът не съдържа съответен `<input>`, този автор ще се изпрати към Git непроменен.
Ако всички потребителски имена изглеждат добре, то въобще няма да се нуждаем от такъв файл.
В този пример искаме файлът ни да изглежда така:

[source]
----
"bob"="Bob Jones <bob@company.com>"
"bob@localhost"="Bob Jones <bob@company.com>"
"bob <bob@company.com>"="Bob Jones <bob@company.com>"
"bob jones <bob <AT> company <DOT> com>"="Bob Jones <bob@company.com>"
----

Същият вид мапинг файлове може да се използва за преименуване на клонове и тагове, когато дадено Mercurial име не е позволено за Git.

След това е време да създадем новото ни Git хранилище и да пуснем експортиращия скрипт:

[source,console]
----
$ git init /tmp/converted
$ cd /tmp/converted
$ /tmp/fast-export/hg-fast-export.sh -r /tmp/hg-repo -A /tmp/authors
----

Флагът `-r` инструктира hg-fast-export къде да намери Mercurial хранилището, което ще се конвертира, а `-A` указва къде е author-mapping файла (съответно за файловете за клонове и тагове се използват флаговете `-B` и `-T`).
Скриптът парсва Mercurial changeset-ите и ги конвертира в скрипт за целите на "fast-import" функцията на Git (ще я разгледаме малко по-късно).
Това отнема малко време (но за сметка на това е _много_ по-бързо, в сравнение с времето необходимо, ако трябваше да се прави по мрежата) и изходът е доста подробен:

[source,console]
----
$ /tmp/fast-export/hg-fast-export.sh -r /tmp/hg-repo -A /tmp/authors
Loaded 4 authors
master: Exporting full revision 1/22208 with 13/0/0 added/changed/removed files
master: Exporting simple delta revision 2/22208 with 1/1/0 added/changed/removed files
master: Exporting simple delta revision 3/22208 with 0/1/0 added/changed/removed files
[…]
master: Exporting simple delta revision 22206/22208 with 0/4/0 added/changed/removed files
master: Exporting simple delta revision 22207/22208 with 0/2/0 added/changed/removed files
master: Exporting thorough delta revision 22208/22208 with 3/213/0 added/changed/removed files
Exporting tag [0.4c] at [hg r9] [git :10]
Exporting tag [0.4d] at [hg r16] [git :17]
[…]
Exporting tag [3.1-rc] at [hg r21926] [git :21927]
Exporting tag [3.1] at [hg r21973] [git :21974]
Issued 22315 commands
git-fast-import statistics:
---------------------------------------------------------------------
Alloc'd objects:     120000
Total objects:       115032 (    208171 duplicates                  )
      blobs  :        40504 (    205320 duplicates      26117 deltas of      39602 attempts)
      trees  :        52320 (      2851 duplicates      47467 deltas of      47599 attempts)
      commits:        22208 (         0 duplicates          0 deltas of          0 attempts)
      tags   :            0 (         0 duplicates          0 deltas of          0 attempts)
Total branches:         109 (         2 loads     )
      marks:        1048576 (     22208 unique    )
      atoms:           1952
Memory total:          7860 KiB
       pools:          2235 KiB
     objects:          5625 KiB
---------------------------------------------------------------------
pack_report: getpagesize()            =       4096
pack_report: core.packedGitWindowSize = 1073741824
pack_report: core.packedGitLimit      = 8589934592
pack_report: pack_used_ctr            =      90430
pack_report: pack_mmap_calls          =      46771
pack_report: pack_open_windows        =          1 /          1
pack_report: pack_mapped              =  340852700 /  340852700
---------------------------------------------------------------------

$ git shortlog -sn
   369  Bob Jones
   365  Joe Smith
----

Това е почти всичко.
Всички Mercurial тагове са конвертирани в Git тагове и Mercurial клоновете и bookmarks обектите са превърнати в съответните Git клонове.
Сега сте готови да публикувате хранилището в сървъра:

[source,console]
----
$ git remote add origin git@my-git-server:myrepository.git
$ git push origin --all
----
